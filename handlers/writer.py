from aiogram import Router, F
from aiogram.types import CallbackQuery, Message, FSInputFile
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from keyboards.inline import get_category_keyboard, get_writer_panel
from config.config import CATEGORIES, BOT_TOKEN
from utils.database import get_user_role, submit_news

router = Router()


# –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ—Å—Ç–∏
class CreateNews(StatesGroup):
    waiting_for_category = State()
    waiting_for_title = State()
    waiting_for_description = State()
    waiting_for_image = State()


@router.callback_query(lambda c: c.data == "writer_panel")
async def writer_panel(callback: CallbackQuery):
    if await get_user_role(callback.from_user.id) != "writer":
        await callback.answer("üö´ –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω!", show_alert=True)
        return
    await callback.message.edit_text(
        "‚úçÔ∏è –ü–∞–Ω–µ–ª—å –ø–∏—Å–∞—Ç–µ–ª—è\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ üëá",
        reply_markup=get_writer_panel()
    )
    await callback.answer()


@router.callback_query(lambda c: c.data == "create_news")
async def create_news(callback: CallbackQuery, state: FSMContext):
    if await get_user_role(callback.from_user.id) != "writer":
        await callback.answer("üö´ –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω!", show_alert=True)
        return
    await callback.message.edit_text(
        "üì∞ –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –¥–ª—è –Ω–æ–≤–æ—Å—Ç–∏:",
        reply_markup=get_category_keyboard()
    )
    await state.set_state(CreateNews.waiting_for_category)
    await callback.answer()


@router.callback_query(lambda c: c.data.startswith("category_"), CreateNews.waiting_for_category)
async def process_category(callback: CallbackQuery, state: FSMContext):
    category = callback.data.split("_")[1]
    await state.update_data(category=category)
    await callback.message.edit_text(
        "üìù –í–≤–µ–¥–∏—Ç–µ –∑–∞–≥–æ–ª–æ–≤–æ–∫ –Ω–æ–≤–æ—Å—Ç–∏:",
        reply_markup=None
    )
    await state.set_state(CreateNews.waiting_for_title)
    await callback.answer()


@router.message(CreateNews.waiting_for_title)
async def process_title(message: Message, state: FSMContext):
    if await get_user_role(message.from_user.id) != "writer":
        await message.answer("üö´ –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω!")
        return
    await state.update_data(title=message.text)
    await message.answer(
        "üìú –í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –Ω–æ–≤–æ—Å—Ç–∏:",
        reply_markup=None
    )
    await state.set_state(CreateNews.waiting_for_description)


@router.message(CreateNews.waiting_for_description)
async def process_description(message: Message, state: FSMContext):
    if await get_user_role(message.from_user.id) != "writer":
        await message.answer("üö´ –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω!")
        return
    await state.update_data(description=message.text)
    await message.answer(
        "üñº –ü—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ –∫–∞—Ä—Ç–∏–Ω–∫—É (–∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å' –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –±–µ–∑ –∫–∞—Ä—Ç–∏–Ω–∫–∏):",
        reply_markup=None
    )
    await state.set_state(CreateNews.waiting_for_image)


@router.message(CreateNews.waiting_for_image)
async def process_image(message: Message, state: FSMContext):
    if await get_user_role(message.from_user.id) != "writer":
        await message.answer("üö´ –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω!")
        return
    data = await state.get_data()

    image_url = None
    if message.text and message.text.lower() != "–ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å":
        await message.answer(
            "‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ –∫–∞—Ä—Ç–∏–Ω–∫—É –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å'.",
            reply_markup=get_writer_panel()
        )
        return
    elif message.photo:
        # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é (—Å–∞–º—É—é –±–æ–ª—å—à—É—é) –≤–µ—Ä—Å–∏—é —Ñ–æ—Ç–æ
        photo = message.photo[-1]
        file = await message.bot.get_file(photo.file_id)
        image_url = f"https://api.telegram.org/file/bot{BOT_TOKEN}/{file.file_path}"

    await submit_news(
        category=data["category"],
        title=data["title"],
        description=data["description"],
        author_id=message.from_user.id,
        image_url=image_url
    )
    await message.answer(
        "‚úÖ –ù–æ–≤–æ—Å—Ç—å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É!",
        reply_markup=get_writer_panel()
    )
    await state.clear()